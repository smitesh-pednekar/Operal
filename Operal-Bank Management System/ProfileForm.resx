<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CBSecurity.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAW1JREFUSEvt
        VMtKA0EQ7IvgY2d2VwyC+Ajob0T8GD/Ag+eIF/0I4x9EBcEviJ5FTx4U9BLBgydPHhyrt9t1d2ZIghLx
        kIKC3anqmk03aZrgf8NRljky247SM0f2CXxV4pnPWMtTtY8ORzSFkD3wDXRDyJ4212j5YOCr11BwXQkY
        lajJVzUmDkfzKzA+eIWg6YIttCUXJpt4Pwl99h4ZyxpXh6OlWRTfRop21BIAl+yGfnPDWWr5BsI7EXNX
        NJ6JOcTZo5CfpecybL8uPWKthPxk+xEaTUv0ItzXDkTLtkKNs6S2AA56nkG5OKd6P9RsX7QFE9GYPdYL
        4OXKE5XlBc+hNvSCS9YLjL1FDAzmOGI8F60c8ouwOmR7od4K0w5rNThqJBDvQrNtqyUAtH3Py0RGI1FL
        HRA3QN45XtHXH42mwRlpaXoa+oodta5xcaCnTRh/uCqypsYMhvR8TMuuCnyRv67flb9b1xP8IYg+Aby+
        2PsD/ScbAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btncancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAXxJREFUSEvt
        lLtKxEAUhqOsLoitsq5biJ21z6DPoIiXTrC0s/WChYiFlYWgID6BT+JdK0WxtBTFS/zO7Mky2ZlJssFG
        2A8+yM785xzjMIm6/DlxHFexT3/mQnZQH4tD0QS+4D02dDkImSX8xFOs6HI2BCfxFRMecVy3HdhbwR8J
        KmdY1W0/BPrxWdJtyJvVNdaCtXn8kkAbWxrxQ6CClybqcoetYTzPoW+IsKqxMISG8NzEXR5wDJfR/nfZ
        rGurfAjXUd7Ah5xZ6E12tUVxKBrGC1NejA0t7RyKZVjozGw2taQ8NGngk2nn5wB7NF4emixg6EwEOctR
        jZeDBouYNSRB7lm5YRTKkG/pUpDOh1Ewg/Lt8rGP181HhyusaZtsCM5iaMiOZmp4Y1Zc5I/IHkZgAD8k
        7SF1Gfk9grdmx+VQY2EInTSzKfZ0OwXr8gWRs7F5xymNhCHUi0dSoWReRvbtS/2G+UMSCMtXfBvXMPcy
        kpFLfYzTutTl3xFFv8X5eGi4YvI5AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnEdit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAYAAACpSkzOAAAABGdBTUEAALGPC/xhBQAAAkRJREFUSEu1
        ljloFVEUhp9RQyQuiUazmEbsUig2ghu4FraC9naWgiBY2tuJpFJM4Q5uIKiFhdqoiAvuVlqItq4o4vh9
        13NhGM17857JB1+R8+45f+7MfTOvMVUURbEDr+ARHIny1MLgPfgLM29xeXz8/zBsBnbjWvyIZd7jWCzt
        HIbMwhN4G+fh9IQxYBV+cxpcxzm4Gb9YKPEae6OtPjR5uXbjbNyAn1Bu4Vzcgl8tlNge7fWgwZDDqZXT
        FbX1mC9ZDtuK5bCVaUAdWNyFR1NbUTzFQexDD8M6rIZtQ8PGY0RrWGzIMZQcMoTPMd+ff4WtwK4Y0xwW
        erpOoTxDQ/rxvoXgQKzdhJ9Thd2nAXVgcTXEXQzgIwvBSZyJhnsZ1+ANHIwxzWGhIadRJgvxnzBkGF/g
        VeyJEa1hsSFnUPwejGI15Dx6xK0/tABvcDTGNIeFhpy1C8oheZjkkBF0J/IKa4fYfM4umCzkAuaQlxbA
        kzgUY5rDQm/kZbsghyzCViFPsN6NFxaPp7aieIfL0JAHFoIcshRzyGNcEiPqQYO7kI1YDbmI7tgQ74V4
        MBZHez1oGEutfNPj773oCZJr2IPlkHvYn5rbgab9qb0oDkXJmo+US1jdyV1sP0RovJlG8AiJkrVe9Bnm
        ocghd7AvlrSHjfgTv2N3lK0vwJ3oW1K8ZwPxcfvQvCuN+cNx3Ic+q35YCDyJC6OlMxgwkUb9zQc02F3N
        j+WdwxAfmOLPJb8XB3E11nuP1IWBvkP8DTAcpWmg0fgNjHteSpr1V4MAAAAASUVORK5CYII=
</value>
  </data>
</root>